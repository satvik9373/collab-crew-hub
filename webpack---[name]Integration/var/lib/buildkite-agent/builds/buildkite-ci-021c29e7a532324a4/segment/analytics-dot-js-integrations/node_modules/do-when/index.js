/**
 * Module dependencies.
 */

var nextTick = require('next-tick');

/**
 * Loop on a short interval until `condition()` is true, then call `fn`.
 *
 * @param {Function} condition
 * @param {Function} fn
 * @param {number} [interval=10]
 */

function when(condition, fn, interval) {
    if (typeof condition !== 'function') throw new Error('condition must be a function');
    if (typeof fn !== 'function') throw new Error('fn must be a function');

    if (condition()) return nextTick(fn);

    var ref = setInterval(function() {
        if (!condition()) return;
        nextTick(fn);
        clearInterval(ref);
    }, interval || 10);
}

/**
 * Exports.
 */

module.exports = when;